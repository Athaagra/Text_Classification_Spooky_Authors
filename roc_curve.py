# -*- coding: utf-8 -*-
"""
Created on Thu May 10 20:57:22 2018

@author: Kel3vra
"""

test=[]
for i in range(156):
    test.append(1)
for i in range(234):
    test.append(0)

pred=[ 0.0386 ,  0.8516 ,  0.9986 ,  0.9991 ,  0.9991 ,  0.9996 ,  0.9997 ,  0.9999 ,  0.981 ,  0.9997 ,  0.9998 ,  0.9845 ,  0.9999 ,  0.9997 ,  0.4997 ,  0.9996 ,  0.9996 ,  0.9968 ,  0.9922 ,  0.9996 ,  0.0026 ,  0.9981 ,  0.9993 ,  0.9853 ,  0.9919 ,  0.9027 ,  0.9984 ,  1. ,  1. ,  0.9922 ,  0.974 ,  0.9966 ,  0.9996 ,  0.9996 ,  0.9999 ,  0.9999 ,  0.9856 ,  0.9998 ,  0.9988 ,  0.9985 ,  0.9997 ,  0.9994 ,  0.9907 ,  0.9981 ,  0.9992 ,  0.9998 ,  0.9974 ,  0.9907 ,  0.1271 ,  0.9917 ,  0.1913 ,  0.9997 ,  0.9998 ,  0.0854 ,  0.0401 ,  0.9743 ,  0.9989 ,  0.9999 ,  0.9999 ,  0.892 ,  0.999 ,  0.9995 ,  0.9989 ,  0.9998 ,  0.9922 ,  0.5915 ,  0.9997 ,  0.9991 ,  0.9993 ,  0.9999 ,  0.9997 ,  0.9991 ,  0.9994 ,  0.9839 ,  0.9982 ,  0.9602 ,  0.9991 ,  0.9915 ,  1. ,  0.9999 ,  0.9999 ,  0.998 ,  0.9998 ,  0.6363 ,  0.9999 ,  0.9999 ,  0.9999 ,  0.3224 ,  0.3203 ,  0.9996 ,  0.995 ,  0.9971 ,  0.956 ,  0.9874 ,  0.9984 ,  0.9996 ,  0.9999 ,  0.9999 ,  0.9999 ,  0.9997 ,  0.9779 ,  0.9974 ,  0.9886 ,  0.9929 ,  0.9929 ,  0.9994 ,  0.9996 ,  0.9703 ,  0.9999 ,  0.9998 ,  0.9997 ,  0.9792 ,  0.9982 ,  0.7105 ,  0.9797 ,  0.9795 ,  1. ,  1. ,  1. ,  1. ,  0.9999 ,  0.9252 ,  0.9017 ,  0.9047 ,  0.9971 ,  0.9997 ,  0.9998 ,  1. ,  0.9999 ,  0.5037 ,  0.9996 ,  0.9879 ,  0.9999 ,  0.9998 ,  0.9826 ,  0.9994 ,  0.9998 ,  0.9846 ,  0.9985 ,  0.9953 ,  0.9999 ,  0.9981 ,  0.9935 ,  0.974 ,  0.9979 ,  0.946 ,  0.9995 ,  0.999 ,  0.034 ,  0.9998 ,  0.9738 ,  0.9998 ,  0.9996 ,  0.9996 ,  0.0327 ,  0.9807 ,
 0.0024 ,  0.0075 ,  0.0011 ,  0.0969 ,  0.0095 ,  0.0001 ,  0.0039 ,  0.0018 ,  0.0079 ,  0.0005 ,  0.0004 ,  0.0616 ,  0.0001 ,  0.0206 ,  0.0184 ,  0.0188 ,  0.9861 ,  0.0009 ,  0.0008 ,  0.0041 ,  0.0146 ,  0.0041 ,  0.0018 ,  0.006 ,  0.0117 ,  0.0038 ,  0.0068 ,  0.0004 ,  0.0028 ,  0.0099 ,  0.0028 ,  0.0074 ,  0.0312 ,  0.0005 ,  0.0047 ,  0.0001 ,  0. ,  0.001 ,  0.0004 ,  0. ,  0.0164 ,  0. ,  0.0042 ,  0. ,  0.0169 ,  0.8728 ,  0.0138 ,  0.3146 ,  0.0115 ,  0.2305 ,  0.0108 ,  0.0014 ,  0.3187 ,  0.0006 ,  0.0006 ,  0.0006 ,  0.0134 ,  0.0055 ,  0.0001 ,  0.0068 ,  0. ,  0.0058 ,  0.0054 ,  0. ,  0.0002 ,  0.0001 ,  0.0024 ,  0.6664 ,  0.0002 ,  0.1784 ,  0. ,  0.0017 ,  0.4876 ,  0.0022 ,  0.006 ,  0.3029 ,  0.0015 ,  0.0425 ,  0. ,  0.0002 ,  0.0009 ,  0.0002 ,  0.0001 ,  0.0899 ,  0.0004 ,  0.2179 ,  0.0001 ,  0.0396 ,  0.8449 ,  0.3494 ,  0. ,  0.146 ,  0.0214 ,  0.0367 ,  0.0082 ,  0.0082 ,  0.0002 ,  0.0297 ,  0.0768 ,  0.0218 ,  0. ,  0.4687 ,  0.0008 ,  0.5658 ,  0.0579 ,  0.0022 ,  0. ,  0. ,  0.0013 ,  0.9192 ,  0.0541 ,  0.0001 ,  0. ,  0.9541 ,  0. ,  0.1626 ,  0.8081 ,  0.5847 ,  0.5847 ,  0.9271 ,  0.9103 ,  0.9346 ,  0.9231 ,  0.8247 ,  0.9864 ,  0.0009 ,  0.9771 ,  0.0092 ,  0.061 ,  0.9912 ,  0.8572 ,  0.9242 ,  0.9674 ,  0.9843 ,  0.4623 ,  0.8284 ,  0.9763 ,  0.9204 ,  0.1301 ,  0.1301 ,  0.9894 ,  0.0033 ,  0.972 ,  0.9925 ,  0.9844 ,  0.918 ,  0.9235 ,  0.7885 ,  0.0036 ,  0.0059 ,  0. ,  0.0007 ,  0.0029 ,  0.0197 ,  0.0003 ,  0. ,  0.0008 ,  0.0035 ,  0.1461 ,  0.0576 ,  0.0975 ,  0.0002 ,  0.0001 ,  0.0271 ,  0.0003 ,  0.0036 ,  0.066 ,  0.0002 ,  0.0022 ,  0.0002 ,  0.001 ,  0.036 ,  0.0127 ,  0.0091 ,  0.0166 ,  0. ,  0.0002 ,  0.0002 ,  0.0001 ,  0.0001 ,  0.0025 ,  0.6797 ,  0.015 ,  0.0001 ,  0.0006 ,  0. ,  0.0047 ,  0. ,  0.0338 ,  0.0015 ,  0.004 ,  0.0001 ,  0.0007 ,  0.1067 ,  0.0005 ,  0.0036 ,  0.0002 ,  0.0133 ,  0.0038 ,  0. ,  0.0266 ,  0.0005 ,  0.025 ,  0.0001 ,  0.0006 ,  0.0006 ,  0.0007 ,  0.0056 ,  0.0001 ,  0.3435 ,  0.0043 ,  0.0003 ,  0. ,  0.0092 ,  0.0043 ,  0.0017 ,  0.0077 ,  0.225 ,  0.144 ,  0.0072 ,  0.0008 ,  0.0071 ,  0.0021 ,  0.0033 ,  0.0014 ,  0.0003 ,  0.2141 ,  0.0002 ,  0.0382 ,  0.0033 ,  0.7726 ,  0.0019 ,  0.001 ,  0.008 

]


import matplotlib.pyplot as plt
import pylab as plt
from sklearn.metrics import roc_curve, auc
fpr = dict()
tpr = dict()
roc_auc = dict()
for i in range(2):
    fpr[i], tpr[i], _ = roc_curve(test, pred)
    roc_auc[i] = auc(fpr[i], tpr[i])
r="%.3f" %roc_auc[0]
# Compute micro-average ROC curve and ROC area
lw = 1
#print(roc_auc_score(test, pred))
plt.plot(fpr[1], tpr[1], color='blue',
         lw=lw, label='ROC curve (area = %0.2f)' % roc_auc[1])
plt.figure()
plt.plot(fpr[1], tpr[1])
plt.xlim([0.0, 1.0])
plt.ylim([0.0, 1.05])
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('Receiver operating characteristic')
plt.plot([], [],  label="Roc Curve (area = {})".format(r),color='navy')
plt.legend(loc="lower right")
plt.savefig('Roc-Curve-adam-100-90.png')
plt.show()